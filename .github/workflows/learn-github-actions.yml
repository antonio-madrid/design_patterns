name: learn-github-actions
run-name: ${{ github.actor }} is learning GitHub Actions
on: [ push ]
env:
  MY_GLOBAL_VAR: 'This is a global variable'

jobs:
  my-first-job:
    environment: TEST_ENV
    env:
      MY_LOCAL_VAR: ${{ 34 }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '18'

      - run: npm install -g bats
      - run: bats -v

      - name: PWD
        run: |
          pwd
          cd .github/actions/hello-bash
          ls -la
          ls -la /home/runner/work/design_patterns/design_patterns/.github/actions/hello-bash

      - name: Run Hello World Action
        uses: ./.github/actions/hello-bash
        with:
          who-to-greet: 'Antonio'

      - name: Show global var
        run: echo $MY_GLOBAL_VAR

      - name: Show local var
        run: echo $MY_LOCAL_VAR

      - name: Use contains function
        run: echo ${{ contains(fromJSON('[1, 2, 3, 4, 5]'), 3) }}

      - name: Use startsWith function
        run: echo ${{ startsWith('Hello World', 'Hello') }}

      - name: Use format function
        run: echo ${{ format('Hello {0}, {1}', 'World', 'Antonio') }}

      - name: Use join function
        run: echo ${{ join(fromJSON('["Hello", "World"]'), ' ') }}

      - name: Use toJSON function
        run: echo ${{ toJSON('age') }}

      - name: Use fromJSON function
        run: |
          echo ${{ fromJSON('false') }}
          echo ${{ fromJSON('34') }}

      - name: Use hashFiles function
        run: echo ${{ hashFiles('**/package.json') }}

      - name: Accessing context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: |
          echo ${{ github.actor }}
#          echo $GITHUB_CONTEXT
#          echo ${{ toJSON(github) }}

      - name: Accessing env
        env:
          LOCAL_ENV_VAR: 'Antonio'
        run: | 
          echo ${{ env.LOCAL_ENV_VAR }}
          echo ${{ env.MY_GLOBAL_VAR }}
          echo $MY_GLOBAL_VAR

      - name: Accessing vars context
        run: echo ${{ vars.MY_TEST_ENV }}

      - name: Accessing repository vars
        run: echo ${{ vars.REPOSITORY_VAR }}

      - name: Modify a env var
        run: echo "MY_GLOBAL_VAR=This is a new global value" >> $GITHUB_ENV

      - name: Access to the modified env var
        run: echo $MY_GLOBAL_VAR


  parent-job:
    runs-on: ubuntu-latest
    steps:
      - run: echo "This is a parent job"

  child-job:
    needs: parent-job
    runs-on: ubuntu-latest
    steps:
      - run: echo "This is a child job executed after the parent job"

  child-dependant-job:
    needs: child-job
    runs-on: ubuntu-latest
    steps:
      - run: echo "This is another dependant job which depends of the child-job"
